# .gqlgen.yml example
#
# Refer to https://gqlgen.com/config/
# for detailed .gqlgen.yml documentation.


schema:
 - schema/*.graphql

# Let gqlgen know where to put the generated server
exec:
  filename: graph/generated_server.go
  package: graph
  
# Let gqlgen know where to put the generated models (if any)
model:
  filename: graph/generated_types.go
  package: graph
  
# Optional, turns on resolver stub generation
resolver:
  filename: graph/resolver.go # where to write them
  type: Resolver  # what's the resolver root implementation type called?

# Optional, turns on binding to field names by tag provided
struct_tag: json


# Tell gqlgen about any existing models you want to reuse for
# graphql. These normally come from the db or a remote api.
models:
  Timestamp:
    model: github.com/zltgo/webkit/graphqlx.Timestamp

  # The GraphQL type ID is backed by 
  ID: 
    # model also accepts multiple backing go types. When mapping onto structs
    # any of these types can be used, the first one is used as the default for
    # resolver args.
    model:
      - github.com/zltgo/webkit/graphqlx.UUID 